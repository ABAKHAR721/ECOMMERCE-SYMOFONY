{% extends 'base.html.twig' %}

{% block title %}{{ user.username }}| ORDERS{% endblock %}

{% block body %}



<div class="row my-4">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1>My Products</h1>
                <a class="btn btn-sm btn-outline-warning text-color-dark" href="{{ path('app_home') }}">Back to Home</a>
            </div>
            <div class="card-body">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                        
                            <th>Product Name</th>
                            <th>Price</th>
                            <th>Image</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% set total = 0 %}
                        {% for order in cartItems %}
            
                            <tr>
                                <td>{{ order.pname }}</td>
                                <td>{{ order.price }}</td>
                                <td class="text-center">
                                    {% for product in products %}
                                   
                                        {% if order.pname == product.name %}
                                            {% set total = total + order.price %}
                                            <a href="{{ path('app_hproduit', {'id': product.id}) }}">
                                                <img class="card-img-top img-fluid" src="{{ asset('productimg/' ~ product.image) }}" alt="Product Image" style="width: 100px;">
                                            </a>                                       
                                        {% endif %}
                                        {% endfor %}
                                </td>
                                <td class="text-center" >
                                    {{ include('order/userdeleteorder.html.twig') }}  
                                </td>
                            </tr>
                            {% endfor %}
                        <tr class="text-center">
                            <th style="color: rgb(255, 0, 0);" colspan="1">Total</th>
                            <td style="color: rgb(255, 0, 0);" class="fw-bold">{{ total }}DH</td>
                            <td style="color: rgb(255, 0, 0);" class="fw-bold">
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="card-footer">
                    <div class="complete-purchase"><b>Completez vos achats:</b></div>
                    <div id="paypal-button-container"></div>
          
                    </div>
                 </div>
            </div>
        </div>
                
    </div>
</div>
<script src="https://www.paypal.com/sdk/js?client-id=AX2wJyZ5LlL9d6_MWkqojc1RMJBTBhPA7UAlu9HGfN2YnnHkMgvGnQ4bdSWwc1A9TLzniU6hwGW6n2DE&locale=en_US"></script>
        <script>
           paypal.Buttons({
        // All your options here !
        createOrder: function(data, actions){
            return actions.order.create({
                purchase_units: [{
                    amount: {
                      value: "{{total}}"
                    }     
                }]
            });
          },
        // Finalizes the transaction after payer approval
        onApprove: function(data,actions){
                return actions.order.capture().then(function(details){
                    window.location.href="{{path('cart_checkout')}}";
                });
              }
}).render('#paypal-button-container');

</script>

{% block javascripts %}

<script>
    function showAlertrejected() {
        alert('Order rejected please contact as');
    }
    function showAlerttraited() {
        alert('Order traited clicke ok to continue');
    }
    function showAlert() {
        alert('Your Order is currently being processed.');
    }

    function convertToButton3(element) {
    // Create a new button element
    var button = document.createElement('button');
    // Add classes to style the button
    button.classList.add('btn', 'btn-dark');
    // Set the button text
    button.textContent = "Your order is currently being processed.";
    // Replace the span with the button
    element.parentNode.replaceChild(button, element);
}

function convertToButton2(element) {
    // Create a new button element
    var button = document.createElement('button');
    // Add classes to style the button
    button.classList.add('btn', 'btn-danger');
    // Set the button text
    button.textContent = "Order rejected please contact as";
    // Replace the span with the button
    element.parentNode.replaceChild(button, element);
}






</script>
{% endblock %}
{% endblock %}
